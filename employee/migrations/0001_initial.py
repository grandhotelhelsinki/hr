# Generated by Django 4.1.4 on 2023-05-11 13:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_id', models.CharField(blank=True, max_length=50, null=True)),
                ('employee_first_name', models.CharField(max_length=200)),
                ('employee_last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('employee_profile', models.ImageField(blank=True, null=True, upload_to='employee/profile')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='male', max_length=10)),
                ('qualification', models.CharField(blank=True, max_length=50, null=True)),
                ('experience', models.IntegerField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced')], default='single', max_length=50, null=True)),
                ('children', models.IntegerField(blank=True, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('employee_user_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_get', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['employee_first_name'],
                'permissions': (('change_ownprofile', 'Update own profile'), ('view_ownprofile', 'View Own Profile')),
            },
        ),
        migrations.CreateModel(
            name='EmployeeWorkInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(blank=True, max_length=254, null=True)),
                ('date_joining', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('basic_salary', models.IntegerField(blank=True, default=0, null=True)),
                ('salary_hour', models.IntegerField(blank=True, default=0, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('company_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.company')),
                ('department_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.department')),
                ('employee_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_work_info', to='employee.employee')),
                ('employee_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.employeetype')),
                ('job_position_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.jobposition')),
                ('job_role_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.jobrole')),
                ('reporting_manager_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reporting_manager', to='employee.employee')),
                ('shift_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.employeeshift')),
                ('work_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.worktype')),
            ],
            options={
                'permissions': [('view_ownworkinfo', 'View Own Work Info'), ('view_history', 'View Employee Work Information History')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmployeeWorkInformation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(blank=True, max_length=254, null=True)),
                ('date_joining', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('basic_salary', models.IntegerField(blank=True, default=0, null=True)),
                ('salary_hour', models.IntegerField(blank=True, default=0, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.company')),
                ('department_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.department')),
                ('employee_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employee.employee')),
                ('employee_type_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.employeetype')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='employee_work_info_history', to='employee.employeeworkinformation')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_position_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.jobposition')),
                ('job_role_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.jobrole')),
                ('reporting_manager_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employee.employee')),
                ('shift_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.employeeshift')),
                ('work_type_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.worktype')),
            ],
            options={
                'verbose_name': 'historical employee work information',
                'verbose_name_plural': 'historical employee work informations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='EmployeeBankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=50)),
                ('account_number', models.CharField(max_length=50, unique=True)),
                ('branch', models.CharField(max_length=50)),
                ('address', models.TextField(max_length=300)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('any_other_code1', models.CharField(max_length=50)),
                ('any_other_code2', models.CharField(blank=True, max_length=50, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('employee_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_bank_details', to='employee.employee')),
            ],
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(condition=models.Q(('badge_id__isnull', False)), fields=('badge_id',), name='unique_badge_id'),
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('employee_first_name', 'employee_last_name')},
        ),
    ]
