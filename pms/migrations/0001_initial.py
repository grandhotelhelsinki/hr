# Generated by Django 4.2.7 on 2024-02-17 05:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('horilla_audit', '0001_initial'),
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('employee', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeKeyResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_result', models.CharField(max_length=60, null=True)),
                ('key_result_description', models.TextField(null=True)),
                ('progress_type', models.CharField(blank=True, choices=[('%', 'Percentage'), ('#', 'Number'), ('Currency', (('$', 'USD$'), ('₹', 'INR'), ('€', 'EUR')))], max_length=60, null=True)),
                ('status', models.CharField(blank=True, choices=[('On Track', 'On Track'), ('Behind', 'Behind'), ('Closed', 'Closed'), ('At Risk', 'At Risk'), ('Not Started', 'Not Started')], default='Not Started', max_length=20, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('updated_at', models.DateField(auto_now=True, null=True)),
                ('start_value', models.IntegerField(blank=True, default=0, null=True)),
                ('current_value', models.IntegerField(blank=True, default=0, null=True)),
                ('target_value', models.IntegerField(blank=True, default=0, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('progress_percentage', models.IntegerField(blank=True, default=0, null=True)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='emp_kpi', to='employee.employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.CharField(max_length=100)),
                ('objective_description', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('On Track', 'On Track'), ('Behind', 'Behind'), ('Closed', 'Closed'), ('At Risk', 'At Risk'), ('Not Started', 'Not Started')], default='Not Started', max_length=20)),
                ('archive', models.BooleanField(blank=True, default=False, null=True)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee_objective', to='employee.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_cycle', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('On Track', 'On Track'), ('Behind', 'Behind'), ('Closed', 'Closed'), ('At Risk', 'At Risk'), ('Not Started', 'Not Started')], default='Not Started', max_length=50)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('archive', models.BooleanField(blank=True, default=False, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('colleague_id', models.ManyToManyField(blank=True, related_name='feedback_colleague', to='employee.employee')),
                ('employee_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='feedback_employee', to='employee.employee')),
                ('employee_key_results_id', models.ManyToManyField(blank=True, to='pms.employeekeyresult')),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='feedback_manager', to='employee.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=250)),
                ('question_type', models.CharField(blank=True, choices=[('1', 'Text'), ('2', 'Rating'), ('3', 'Boolean'), ('4', 'Multi-choices'), ('5', 'Likert')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_template', models.CharField(max_length=100, unique=True)),
                ('company_id', models.ManyToManyField(blank=True, to='base.company', verbose_name='Company')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_a', models.CharField(blank=True, max_length=250, null=True)),
                ('option_b', models.CharField(blank=True, max_length=250, null=True)),
                ('option_c', models.CharField(blank=True, max_length=250, null=True)),
                ('option_d', models.CharField(blank=True, max_length=250, null=True)),
                ('question_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='question_options', to='pms.question')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='template_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question', to='pms.questiontemplate'),
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_name', models.CharField(max_length=150, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('company_id', models.ManyToManyField(blank=True, to='base.company', verbose_name='Company')),
            ],
        ),
        migrations.CreateModel(
            name='KeyResultFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.JSONField(blank=True, max_length=200, null=True)),
                ('employee_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='employee_key_result', to='employee.employee')),
                ('feedback_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feedback_key_result', to='pms.feedback')),
                ('key_result_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='key_result_feedback', to='pms.employeekeyresult')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalEmployeeObjective',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_title', models.CharField(blank=True, max_length=20, null=True)),
                ('history_description', models.TextField(null=True)),
                ('history_highlight', models.BooleanField(default=False, null=True)),
                ('objective', models.CharField(max_length=100)),
                ('objective_description', models.TextField()),
                ('created_at', models.DateField(blank=True, editable=False)),
                ('updated_at', models.DateField(blank=True, editable=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('On Track', 'On Track'), ('Behind', 'Behind'), ('Closed', 'Closed'), ('At Risk', 'At Risk'), ('Not Started', 'Not Started')], default='Not Started', max_length=20)),
                ('archive', models.BooleanField(blank=True, default=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('employee_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employee.employee')),
                ('history_tags', models.ManyToManyField(to='horilla_audit.audittag')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee objective',
                'verbose_name_plural': 'historical employee objectives',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmployeeKeyResult',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_title', models.CharField(blank=True, max_length=20, null=True)),
                ('history_description', models.TextField(null=True)),
                ('history_highlight', models.BooleanField(default=False, null=True)),
                ('key_result', models.CharField(max_length=60, null=True)),
                ('key_result_description', models.TextField(null=True)),
                ('progress_type', models.CharField(blank=True, choices=[('%', 'Percentage'), ('#', 'Number'), ('Currency', (('$', 'USD$'), ('₹', 'INR'), ('€', 'EUR')))], max_length=60, null=True)),
                ('status', models.CharField(blank=True, choices=[('On Track', 'On Track'), ('Behind', 'Behind'), ('Closed', 'Closed'), ('At Risk', 'At Risk'), ('Not Started', 'Not Started')], default='Not Started', max_length=20, null=True)),
                ('created_at', models.DateField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateField(blank=True, editable=False, null=True)),
                ('start_value', models.IntegerField(blank=True, default=0, null=True)),
                ('current_value', models.IntegerField(blank=True, default=0, null=True)),
                ('target_value', models.IntegerField(blank=True, default=0, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('progress_percentage', models.IntegerField(blank=True, default=0, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('employee_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employee.employee')),
                ('employee_objective_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pms.employeeobjective')),
                ('history_tags', models.ManyToManyField(to='horilla_audit.audittag')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee key result',
                'verbose_name_plural': 'historical employee key results',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalComment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_title', models.CharField(blank=True, max_length=20, null=True)),
                ('history_description', models.TextField(null=True)),
                ('history_highlight', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('employee_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employee.employee')),
                ('employee_objective_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pms.employeeobjective')),
                ('history_tags', models.ManyToManyField(to='horilla_audit.audittag')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical comment',
                'verbose_name_plural': 'historical comments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='feedback',
            name='question_template_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='feedback_question_template', to='pms.questiontemplate'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='subordinate_id',
            field=models.ManyToManyField(blank=True, related_name='feedback_subordinate', to='employee.employee'),
        ),
        migrations.AddField(
            model_name='employeekeyresult',
            name='employee_objective_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emp_obj_id', to='pms.employeeobjective'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='comment', to='employee.employee')),
                ('employee_objective_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emp_objective', to='pms.employeeobjective')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.JSONField(blank=True, max_length=200, null=True)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='employee_answer', to='employee.employee')),
                ('feedback_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_answer', to='pms.feedback')),
                ('question_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='answer_question_id', to='pms.question')),
            ],
        ),
        migrations.CreateModel(
            name='AnonymousFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_subject', models.CharField(max_length=100)),
                ('based_on', models.CharField(choices=[('general', 'General'), ('employee', 'Employee'), ('department', 'Department'), ('job_position', 'Job Position')], default='general', max_length=50)),
                ('status', models.CharField(choices=[('On Track', 'On Track'), ('Behind', 'Behind'), ('Closed', 'Closed'), ('At Risk', 'At Risk'), ('Not Started', 'Not Started')], default='Not Started', max_length=50)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('archive', models.BooleanField(blank=True, default=False, null=True)),
                ('anonymous_feedback_id', models.CharField(editable=False, max_length=10, null=True)),
                ('feedback_description', models.TextField(blank=True, null=True)),
                ('department_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.department', verbose_name='Department')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee', verbose_name='Employee')),
                ('job_position_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.jobposition', verbose_name='Job Position')),
            ],
        ),
    ]
